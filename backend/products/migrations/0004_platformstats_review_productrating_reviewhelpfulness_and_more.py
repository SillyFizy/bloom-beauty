# Generated by Django 4.2.7 on 2025-06-19 12:18

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('products', '0003_product_beauty_points'),
    ]

    operations = [
        migrations.CreateModel(
            name='PlatformStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('average_rating', models.DecimalField(decimal_places=2, default=4.0, max_digits=3)),
                ('prior_weight', models.PositiveIntegerField(default=10, help_text='Virtual reviews weight for new products')),
                ('min_reviews_full_confidence', models.PositiveIntegerField(default=50, help_text='Reviews needed for 100% confidence')),
                ('total_products', models.PositiveIntegerField(default=0)),
                ('total_reviews', models.PositiveIntegerField(default=0)),
                ('total_users_with_reviews', models.PositiveIntegerField(default=0)),
                ('category_priors', models.JSONField(blank=True, default=dict, help_text='Category-specific average ratings and weights')),
                ('time_decay_days', models.PositiveIntegerField(default=365, help_text='Days for time-weighted decay')),
                ('min_reviews_display', models.PositiveIntegerField(default=1, help_text='Minimum reviews to display rating')),
                ('last_calculated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Platform Statistics',
                'verbose_name_plural': 'Platform Statistics',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(help_text='Rating from 1 to 5 stars', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_verified_purchase', models.BooleanField(default=False, help_text='User purchased this product')),
                ('is_approved', models.BooleanField(default=True, help_text='Review is approved for display')),
                ('helpful_count', models.PositiveIntegerField(default=0)),
                ('total_votes', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='products.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_reviews', models.PositiveIntegerField(default=0)),
                ('raw_average', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('bayesian_average', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('confidence_level', models.DecimalField(decimal_places=2, default=0.0, help_text='0-1 confidence score', max_digits=3)),
                ('rating_1_count', models.PositiveIntegerField(default=0)),
                ('rating_2_count', models.PositiveIntegerField(default=0)),
                ('rating_3_count', models.PositiveIntegerField(default=0)),
                ('rating_4_count', models.PositiveIntegerField(default=0)),
                ('rating_5_count', models.PositiveIntegerField(default=0)),
                ('time_weighted_average', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('last_calculated', models.DateTimeField(auto_now=True)),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='rating_stats', to='products.product')),
            ],
        ),
        migrations.CreateModel(
            name='ReviewHelpfulness',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_helpful', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='products.review')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('review', 'user')},
            },
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['product', '-created_at'], name='products_re_product_9ea0ee_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['user', '-created_at'], name='products_re_user_id_f8df8a_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['is_approved', '-created_at'], name='products_re_is_appr_0554f9_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='review',
            unique_together={('product', 'user')},
        ),
        migrations.AddIndex(
            model_name='productrating',
            index=models.Index(fields=['-bayesian_average'], name='products_pr_bayesia_e0a6f5_idx'),
        ),
        migrations.AddIndex(
            model_name='productrating',
            index=models.Index(fields=['-total_reviews'], name='products_pr_total_r_d75ebe_idx'),
        ),
        migrations.AddIndex(
            model_name='productrating',
            index=models.Index(fields=['-confidence_level'], name='products_pr_confide_992672_idx'),
        ),
    ]
